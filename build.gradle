plugins {
	id 'org.springdoc.openapi-gradle-plugin' version '1.6.0'
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.1.0'


}

group = 'com.innowise'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {

	//Spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.2")

	//Lombok
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	implementation 'org.liquibase:liquibase-core'

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-aop:2.7.5'



	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.9'

	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.5'


	testImplementation "org.testcontainers:postgresql:1.17.0"

	testImplementation "org.testcontainers:junit-jupiter:1.17.6"



}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava {
	options.compilerArgs += [
			'-Amapstruct.defaultComponentModel=spring'

	]
}